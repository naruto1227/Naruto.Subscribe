<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      throwConfigExceptions="false" internalLogFile="Nlog.log"
      autoReload="true">
  <!--throwConfigExceptions 代表是否开启 日志系统的错误消息  -->.
  <!--internalLogFile 日志错误存放的路径-->
  <!--internalLogLevel 触发的等级-->
  <!--加载ASP.NET Core插件-->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>
  <!--定义一个输出到数据库的变量-->
  <variable name="toDatabaseMessage" value="${level}:${message}"/>

  <!--输出目的地 async="true" 异步处理目标-->
  <targets async="true">
    <!-- 设置每个txt文件大小 -->
    <!--layout表示打印到txt的排版格式-->
    <!--fileName表示txt文件名-->
    <!--maxArchiveFiles表示滚动日志文件上限数-->
    <!--archiveFileName表示滚动日志存放路径，超过单个文件大小，会生成如error-2019-03-30.1.log的文件-->
    <!--archiveAboveSize表示每个日志文件大小的最大值（单位：字节）,10485760=10M-->

    <!--AsyncWrapper 缺省封装 异步包装 异步日志记录-->
    <!--<default-wrapper xsi:type="AsyncWrapper">-->
      <!--输出到文件,记录level为info的日志-->
      <target xsi:type="File"
               name="info-file"
               layout="${longdate}|位置：${callsite:className=True:methodName=True:includeSourcePath=True:skipFrames=1}${newline}${message}${newline}"
    fileName="${basedir}/Logs/Info/${shortdate}.log"
               archiveAboveSize="10485760"
               archiveNumbering="Rolling"
               concurrentWrites="true"
               maxArchiveFiles="100000"
               keepFileOpen="false"
    />
      <!--输出到文件,记录level为error的日志 -->
      <target xsi:type="File"
              name="error-file"
              layout="${longdate}|位置:${message}${newline}"
              fileName="${basedir}/Logs/Error/${shortdate}.log"
              archiveFileName="${basedir}/Logs/Error/${shortdate}.log"
              archiveAboveSize="10485760"
              archiveNumbering="Rolling"
              concurrentWrites="true"
              maxArchiveFiles="100000"
              keepFileOpen="false"
    />


      <target xsi:type="File"
            name="debug-file"
            layout="${longdate}|位置：${callsite:className=True:methodName=True:includeSourcePath=True:skipFrames=1}${newline}${message}"
   fileName="${basedir}/Logs/Debug/${shortdate}.log"
            archiveAboveSize="10485760"
            archiveNumbering="Rolling"
            concurrentWrites="true"
            maxArchiveFiles="100000"
            keepFileOpen="false"
    />

      <target xsi:type="File"
        name="trace-file"
        layout="${longdate}|位置：${callsite:className=True:methodName=True:includeSourcePath=True:skipFrames=1}${newline}${message}"
   fileName="${basedir}/Logs/Trace/${shortdate}.log"
        archiveAboveSize="10485760"
        archiveNumbering="Rolling"
        concurrentWrites="true"
        maxArchiveFiles="100000"
        keepFileOpen="false"
    />

      <target xsi:type="File"
        name="fatal-file"
        layout="${longdate}|位置：${callsite:className=True:methodName=True:includeSourcePath=True:skipFrames=1}${newline}${message}"
   fileName="${basedir}/Logs/Fatal/${shortdate}.log"
        archiveAboveSize="10485760"
        archiveNumbering="Rolling"
        concurrentWrites="true"
        maxArchiveFiles="100000"
        keepFileOpen="false"
    />

      <!--输出日志到数据库--><!--
      <target xsi:type="Database"
       name="database-file" connectionString="Server=121.42.248.165;Database=CP.Infrastructure;User=root;Password=root;"
    >
        --><!--nlog默认支持的为sqlserver 用其他的数据库需要安装对应的nuget包--><!--
        <dbProvider>MySql.Data.MySqlClient.MySqlConnection,Mysql.Data</dbProvider>
        --><!--数据库脚本--><!--
        <commandText>
          insert into log(Message,CreateDate)values(@message,NOW());
        </commandText>
        --><!--参数--><!--
        <parameter name="@message" layout="${toDatabaseMessage}" />
      </target>-->
      
      <!--write to the void aka just remove-->
      <target xsi:type="Null" name="blackhole" />
    </targets>
 
  <!--写入目的地的规则-->
  <rules>
    <!--记录level为info的日志-->
    <!-- 跳过以Microsoft.*开头的日志 -->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
    <logger name="*" level="Info" writeTo="info-file" />

    <!--记录level为error的日志-->
    <logger name="*" level="Error" writeTo="error-file" />

    <!--记录level为Debug的日志-->
    <logger name="*" level="Debug" writeTo="debug-file" />

    <!--记录level为Trace的日志-->
    <logger name="*" level="Trace" writeTo="trace-file" />

    <!--记录level为Fatal的日志-->
    <logger name="*" level="Fatal" writeTo="fatal-file" />
    <!--所有等级的日志操作都会写入到数据库-->
    <!--<logger name="*"  writeTo="database-file" />-->
  </rules>
</nlog>